/**
 * NOTE: This class is auto generated by the swagger code generator program (1.0.14).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.TodoList;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;

@Api(value = "lists", description = "the lists API")
public interface ListsApi {

    @ApiOperation(value = "creates a new list", nickname = "addList", notes = "Adds a list to the system", tags={ "todo", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "item created"),
        @ApiResponse(code = 400, message = "invalid input, object invalid"),
        @ApiResponse(code = 409, message = "an existing item already exists") })
    @RequestMapping(value = "/lists",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> addList(@ApiParam(value = "ToDo list to add"  )  @Valid @RequestBody TodoList todoList);


    @ApiOperation(value = "returns all of the available lists", nickname = "searchLists", notes = "Searches the todo lists that are available ", response = TodoList.class, responseContainer = "List", tags={ "todo", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "search results matching criteria", response = TodoList.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "bad input parameter") })
    @RequestMapping(value = "/lists",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<TodoList>> searchLists(@ApiParam(value = "pass an optional search string for looking up a list") @Valid @RequestParam(value = "searchString", required = false) String searchString,@Min(0)@ApiParam(value = "number of records to skip for pagination") @Valid @RequestParam(value = "skip", required = false) Integer skip,@Min(0) @Max(50) @ApiParam(value = "maximum number of records to return") @Valid @RequestParam(value = "limit", required = false) Integer limit);

}
